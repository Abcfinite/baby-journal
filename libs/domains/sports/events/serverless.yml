service: sports-domain-events-service

frameworkVersion: '3'

plugins:
  - serverless-webpack
  - serverless-offline

constructs:
  myqueue:
    type: queue
    worker:
      handler: src/messageConsumer.handler

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-southeast-2
  lambdaHashingVersion: '20201221'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:ap-southeast-2:*:table/Bets"
        - "arn:aws:dynamodb:ap-southeast-2:*:table/weight"
  environment:
    TENNISLIVE_HOST: ${env:TENNISLIVE_HOST}

custom:
  webpack:
    webpackConfig: './webpack.config.js'
    packager: yarn

functions:
  removeAllCache:
    handler: index.removeAllCache
    timeout: 900
    events:
      - http:
          path: /removeAllCache
          method: delete
  # cacheBetAPI:
  #   handler: index.cacheBetAPI
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /cacheBetApi
  #         method: get
  # playersName:
  #   handler: index.getPlayersName
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /playersName
  #         method: get
  # playersUrl:
  #   handler: index.getPlayersUrl
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /playersUrl
  #         method: get
  # checkPlayer:
  #   handler: index.checkPlayer
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /checkPlayer
  #         method: get
  # schedule:
  #   handler: index.getSchedule
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /schedule
  #         method: get
  # getPredictions:
  #   handler: index.getPredictions
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /predictions
  #         method: get
  # result:
  #   handler: index.getResults
  #   timeout: 900
  #   events:
  #     - http:
  #         path: /results
  #         method: get