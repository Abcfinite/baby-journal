{
  "service": {
    "service": "sports-domain",
    "serviceObject": {
      "name": "sports-domain"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "region": "ap-southeast-2",
      "lambdaHashingVersion": "20201221",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": [
            "arn:aws:dynamodb:ap-southeast-2:*:table/Bets",
            "arn:aws:dynamodb:ap-southeast-2:*:table/weight"
          ]
        }
      ],
      "environment": {
        "LADBROKES_BEARER_TOKEN": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkprVWZRNFprZ1dvNjVQcHdZakxZZSJ9.eyJodHRwczovL2d2Y2F1cy5jbGFpbS91c2VyX21ldGFkYXRhIjp7InByZWZlcnJlZF91c2VybmFtZSI6ImRpc3VyZ2EiLCJnaXZlbl9uYW1lIjoibWljaGFlbCIsImZhbWlseV9uYW1lIjoiZmVicmlhbnRvIiwiY2xpZW50X2lkIjoiYzA2MTZhOTAtMDdjZC00MzVjLWFjN2YtNDQ3Njg1N2M2YzFlIn0sImlzcyI6Imh0dHBzOi8vYXV0aC5sYWRicm9rZXMuY29tLmF1LyIsInN1YiI6ImF1dGgwfGMwNjE2YTkwLTA3Y2QtNDM1Yy1hYzdmLTQ0NzY4NTdjNmMxZSIsImF1ZCI6WyJwdWJsaWMtYXBpIiwiaHR0cHM6Ly9sYWRicm9rZXMtYXUtcHJvZHVjdGlvbi5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNzA1NDYwNjM2LCJleHAiOjE3MDY2NzAyMzYsImF6cCI6ImViU1B0VXowZ2RWcU5vVXptdzRldEdtRGx3M1MyZVYzIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCBhZGRyZXNzIHBob25lIG9mZmxpbmVfYWNjZXNzIiwiZ3R5IjoicGFzc3dvcmQifQ.4nfCfkpjQYUBkQizUdI2VOwRoIK78chpeMcCrcoigJZCBykVrKqFj-A3mC2FsDRPMUxQu7gF3s2QWhbB10MJl5izlV7l9WwDgImcKWlw6mK7BPRyhmYxQ4beBygBgH770PpxD7nD4qnabn2rP4ASqYGueBUaha2vu8tIGiqrKeZITnqtowmfj2Q8uoCuj2w5xdDP8YL4Z1bi9zuQgxsOubD_NsJDscTvDh1uHb-mEtsqJGhUF8PmPwL7tVgUAos0RQ4L1tOAKcXILfReYBCmITcnKVGAKMWJC9xUyNA6ULwCMpkpY6bCMdz9Q9NhF-YkMwYjapU9ssn4GPNrHUVfhQ",
        "LADBROKES_HOST": "https://api.ladbrokes.com.au",
        "LADBROKES_SOCKET_HOST": "https://socket.ladbrokes.com.au",
        "LADBROKES_SOCKET_TRANSACTION_PATH": "/rest/v1/transactions/",
        "LADBROKES_EVENT_CARD_PATH": "/v2/sport/event-card",
        "LADBROKES_PENDING_BETS_PATH": "/v2/client/PendingBetCount"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "LogBetsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sports-domain-dev-logBets"
            }
          },
          "SummaryLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/sports-domain-dev-summary"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "sports-domain",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sports-domain-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sports-domain-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "sports-domain",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "LogBetsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sports-domain/dev/1706615301849-2024-01-30T11:48:21.849Z/sports-domain.zip"
              },
              "Handler": "index.logBets",
              "Runtime": "nodejs16.x",
              "FunctionName": "sports-domain-dev-logBets",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "LADBROKES_BEARER_TOKEN": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkprVWZRNFprZ1dvNjVQcHdZakxZZSJ9.eyJodHRwczovL2d2Y2F1cy5jbGFpbS91c2VyX21ldGFkYXRhIjp7InByZWZlcnJlZF91c2VybmFtZSI6ImRpc3VyZ2EiLCJnaXZlbl9uYW1lIjoibWljaGFlbCIsImZhbWlseV9uYW1lIjoiZmVicmlhbnRvIiwiY2xpZW50X2lkIjoiYzA2MTZhOTAtMDdjZC00MzVjLWFjN2YtNDQ3Njg1N2M2YzFlIn0sImlzcyI6Imh0dHBzOi8vYXV0aC5sYWRicm9rZXMuY29tLmF1LyIsInN1YiI6ImF1dGgwfGMwNjE2YTkwLTA3Y2QtNDM1Yy1hYzdmLTQ0NzY4NTdjNmMxZSIsImF1ZCI6WyJwdWJsaWMtYXBpIiwiaHR0cHM6Ly9sYWRicm9rZXMtYXUtcHJvZHVjdGlvbi5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNzA1NDYwNjM2LCJleHAiOjE3MDY2NzAyMzYsImF6cCI6ImViU1B0VXowZ2RWcU5vVXptdzRldEdtRGx3M1MyZVYzIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCBhZGRyZXNzIHBob25lIG9mZmxpbmVfYWNjZXNzIiwiZ3R5IjoicGFzc3dvcmQifQ.4nfCfkpjQYUBkQizUdI2VOwRoIK78chpeMcCrcoigJZCBykVrKqFj-A3mC2FsDRPMUxQu7gF3s2QWhbB10MJl5izlV7l9WwDgImcKWlw6mK7BPRyhmYxQ4beBygBgH770PpxD7nD4qnabn2rP4ASqYGueBUaha2vu8tIGiqrKeZITnqtowmfj2Q8uoCuj2w5xdDP8YL4Z1bi9zuQgxsOubD_NsJDscTvDh1uHb-mEtsqJGhUF8PmPwL7tVgUAos0RQ4L1tOAKcXILfReYBCmITcnKVGAKMWJC9xUyNA6ULwCMpkpY6bCMdz9Q9NhF-YkMwYjapU9ssn4GPNrHUVfhQ",
                  "LADBROKES_HOST": "https://api.ladbrokes.com.au",
                  "LADBROKES_SOCKET_HOST": "https://socket.ladbrokes.com.au",
                  "LADBROKES_SOCKET_TRANSACTION_PATH": "/rest/v1/transactions/",
                  "LADBROKES_EVENT_CARD_PATH": "/v2/sport/event-card",
                  "LADBROKES_PENDING_BETS_PATH": "/v2/client/PendingBetCount"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LogBetsLogGroup"
            ]
          },
          "SummaryLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/sports-domain/dev/1706615301849-2024-01-30T11:48:21.849Z/sports-domain.zip"
              },
              "Handler": "index.summary",
              "Runtime": "nodejs16.x",
              "FunctionName": "sports-domain-dev-summary",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "LADBROKES_BEARER_TOKEN": "Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkprVWZRNFprZ1dvNjVQcHdZakxZZSJ9.eyJodHRwczovL2d2Y2F1cy5jbGFpbS91c2VyX21ldGFkYXRhIjp7InByZWZlcnJlZF91c2VybmFtZSI6ImRpc3VyZ2EiLCJnaXZlbl9uYW1lIjoibWljaGFlbCIsImZhbWlseV9uYW1lIjoiZmVicmlhbnRvIiwiY2xpZW50X2lkIjoiYzA2MTZhOTAtMDdjZC00MzVjLWFjN2YtNDQ3Njg1N2M2YzFlIn0sImlzcyI6Imh0dHBzOi8vYXV0aC5sYWRicm9rZXMuY29tLmF1LyIsInN1YiI6ImF1dGgwfGMwNjE2YTkwLTA3Y2QtNDM1Yy1hYzdmLTQ0NzY4NTdjNmMxZSIsImF1ZCI6WyJwdWJsaWMtYXBpIiwiaHR0cHM6Ly9sYWRicm9rZXMtYXUtcHJvZHVjdGlvbi5hdS5hdXRoMC5jb20vdXNlcmluZm8iXSwiaWF0IjoxNzA1NDYwNjM2LCJleHAiOjE3MDY2NzAyMzYsImF6cCI6ImViU1B0VXowZ2RWcU5vVXptdzRldEdtRGx3M1MyZVYzIiwic2NvcGUiOiJvcGVuaWQgcHJvZmlsZSBlbWFpbCBhZGRyZXNzIHBob25lIG9mZmxpbmVfYWNjZXNzIiwiZ3R5IjoicGFzc3dvcmQifQ.4nfCfkpjQYUBkQizUdI2VOwRoIK78chpeMcCrcoigJZCBykVrKqFj-A3mC2FsDRPMUxQu7gF3s2QWhbB10MJl5izlV7l9WwDgImcKWlw6mK7BPRyhmYxQ4beBygBgH770PpxD7nD4qnabn2rP4ASqYGueBUaha2vu8tIGiqrKeZITnqtowmfj2Q8uoCuj2w5xdDP8YL4Z1bi9zuQgxsOubD_NsJDscTvDh1uHb-mEtsqJGhUF8PmPwL7tVgUAos0RQ4L1tOAKcXILfReYBCmITcnKVGAKMWJC9xUyNA6ULwCMpkpY6bCMdz9Q9NhF-YkMwYjapU9ssn4GPNrHUVfhQ",
                  "LADBROKES_HOST": "https://api.ladbrokes.com.au",
                  "LADBROKES_SOCKET_HOST": "https://socket.ladbrokes.com.au",
                  "LADBROKES_SOCKET_TRANSACTION_PATH": "/rest/v1/transactions/",
                  "LADBROKES_EVENT_CARD_PATH": "/v2/sport/event-card",
                  "LADBROKES_PENDING_BETS_PATH": "/v2/client/PendingBetCount"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SummaryLogGroup"
            ]
          },
          "LogBetsLambdaVersiongdqqqI5zHBpJbb5ETBXvUx0QG4z7hJyg6P1T6jc3c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LogBetsLambdaFunction"
              },
              "CodeSha256": "1lAkZkD99IcSLog3VcRTjgWZP6bS+XxKzrs00DrXPag="
            }
          },
          "SummaryLambdaVersiono0btbcoXCDAU0DusVSp2kKIdLdBbuPildZLh11Es": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SummaryLambdaFunction"
              },
              "CodeSha256": "1lAkZkD99IcSLog3VcRTjgWZP6bS+XxKzrs00DrXPag="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-sports-domain",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceBets": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "bets",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSummary": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "summary",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodBetsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceBets"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LogBetsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "LogBetsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodSummaryGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSummary"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SummaryLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SummaryLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1706614638033": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodBetsGet",
              "ApiGatewayMethodSummaryGet"
            ]
          },
          "LogBetsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LogBetsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SummaryLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SummaryLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-sports-domain-dev-ServerlessDeploymentBucketName"
            }
          },
          "LogBetsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LogBetsLambdaVersiongdqqqI5zHBpJbb5ETBXvUx0QG4z7hJyg6P1T6jc3c"
            },
            "Export": {
              "Name": "sls-sports-domain-dev-LogBetsLambdaFunctionQualifiedArn"
            }
          },
          "SummaryLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SummaryLambdaVersiono0btbcoXCDAU0DusVSp2kKIdLdBbuPildZLh11Es"
            },
            "Export": {
              "Name": "sls-sports-domain-dev-SummaryLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-sports-domain-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "webpack": {
        "webpackConfig": "./webpack.config.js",
        "packager": "yarn"
      }
    },
    "plugins": [
      "serverless-webpack",
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "logBets": {
        "handler": "index.logBets",
        "events": [
          {
            "http": {
              "path": "bets",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sports-domain-dev-logBets",
        "package": {
          "artifact": ".serverless/sports-domain.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "LogBetsLambdaVersiongdqqqI5zHBpJbb5ETBXvUx0QG4z7hJyg6P1T6jc3c"
      },
      "summary": {
        "handler": "index.summary",
        "events": [
          {
            "http": {
              "path": "summary",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "sports-domain-dev-summary",
        "package": {
          "artifact": ".serverless/sports-domain.zip"
        },
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "SummaryLambdaVersiono0btbcoXCDAU0DusVSp2kKIdLdBbuPildZLh11Es"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "sports-domain",
      "frameworkVersion": "3",
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/sports-domain/dev/1706615301849-2024-01-30T11:48:21.849Z",
    "artifact": ""
  }
}